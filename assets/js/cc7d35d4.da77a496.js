(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{101:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),b=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=b(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=b(n),d=r,m=p["".concat(i,".").concat(d)]||p[d]||u[d]||o;return n?a.a.createElement(m,c(c({ref:t},s),{},{components:n})):a.a.createElement(m,c({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},96:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return b}));var r=n(3),a=n(7),o=(n(0),n(101)),i={id:"Code-Organization",title:"Code Organization"},c={unversionedId:"Code-Organization",id:"Code-Organization",isDocsHomePage:!1,title:"Code Organization",description:"This page explains how the project is structured.",source:"@site/docs/Code-Organization.md",slug:"/Code-Organization",permalink:"/mentorship-backend/docs/Code-Organization",editUrl:"https://github.com/anitab-org/mentorship-backend/tree/develop/docs/docs/Code-Organization.md",version:"current",sidebar:"docs",previous:{title:"Technical Decisions",permalink:"/mentorship-backend/docs/Technical-Decisions"},next:{title:"User Authentication",permalink:"/mentorship-backend/docs/User-Authentication"}},l=[{value:"Basic Architecture",id:"basic-architecture",children:[{value:"Root project structure",id:"root-project-structure",children:[]}]}],s={toc:l};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"This page explains how the project is structured."),Object(o.b)("h2",{id:"basic-architecture"},"Basic Architecture"),Object(o.b)("p",{align:"center"},Object(o.b)("img",{alt:"basic architecture",src:"https://user-images.githubusercontent.com/11148726/44174311-ac5eaa80-a0da-11e8-92bb-ca2fe7c26f60.png"})),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Main Components:")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Data Model:")," This contains all database models, which are implemented using SQLAlchemy Model abstraction, e.g.: UserModel, MentorshipRelationModel."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Data Access Object (DAO):")," These classes contain functions used by the API resources and use Database Models."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"API Resources:")," This is responsible for the REST API available form the deployed server. These resources define the namespaces, i.e., resources HTTP methods. It's also responsible for Swagger documentation.")),Object(o.b)("h3",{id:"root-project-structure"},"Root project structure"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Folders and files"),Object(o.b)("th",{parentName:"tr",align:null},"Description"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},".github"),Object(o.b)("td",{parentName:"tr",align:null},"Contains files related to GitHub (e.g.: pull request and issue templates, contributing guidelines, ...)")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"app"),Object(o.b)("td",{parentName:"tr",align:null},"Contains most of the development code")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"docs"),Object(o.b)("td",{parentName:"tr",align:null},"Contains non-production code (e.g.: Swagger and Postman template to test API)")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"templates"),Object(o.b)("td",{parentName:"tr",align:null},"Contains html templates used by the app (e.g.: verification email template)")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"tests"),Object(o.b)("td",{parentName:"tr",align:null},"Contains all unit tests")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"config.py"),Object(o.b)("td",{parentName:"tr",align:null},"Has the different set of configurations the app can run with")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"run.py"),Object(o.b)("td",{parentName:"tr",align:null},"Main entry point of the app")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"requirements.txt"),Object(o.b)("td",{parentName:"tr",align:null},"Describes all dependencies of the app")))))}b.isMDXComponent=!0}}]);