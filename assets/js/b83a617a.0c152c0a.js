(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{101:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},b=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=p(n),d=r,m=b["".concat(o,".").concat(d)]||b[d]||u[d]||i;return n?a.a.createElement(m,s(s({ref:t},l),{},{components:n})):a.a.createElement(m,s({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},92:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(7),i=(n(0),n(101)),o={id:"Mentorship-Relation-Documentation",title:"Mentorship Relation Documentation"},s={unversionedId:"Mentorship-Relation-Documentation",id:"Mentorship-Relation-Documentation",isDocsHomePage:!1,title:"Mentorship Relation Documentation",description:"A Mentorship Relation is when two Users, a mentor, and a mentee are matched together to mentor and support each other. This is a 1 to 1 relation, involving just 2 users, during a certain period of time.",source:"@site/docs/Mentorship-Relation-Documentation.md",slug:"/Mentorship-Relation-Documentation",permalink:"/docs/Mentorship-Relation-Documentation",editUrl:"https://github.com/anitab-org/mentorship-backend/tree/develop/docs/docs/Mentorship-Relation-Documentation.md",version:"current",sidebar:"docs",previous:{title:"Main Base Concepts",permalink:"/docs/Main-Base-Concepts"},next:{title:"Future ideas",permalink:"/docs/Future-ideas"}},c=[{value:"Conceptual Implementation",id:"conceptual-implementation",children:[{value:"Relation states and stages",id:"relation-states-and-stages",children:[]}]}],l={toc:c};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"A ",Object(i.b)("strong",{parentName:"p"},"Mentorship Relation")," is when two Users, a mentor, and a mentee are matched together to mentor and support each other. This is a 1 to 1 relation, involving just 2 users, during a certain period of time. "),Object(i.b)("p",null,"A ",Object(i.b)("strong",{parentName:"p"},"Mentorship Relation request")," is when a User sends a sort of contract in which the other User has to accept so that a mentorship relation can start. This contract contains notes/description, the definition of who will be the mentor and the mentee and the end date of the relation. Currently, this contract cannot be edited after sent by the User."),Object(i.b)("h2",{id:"conceptual-implementation"},"Conceptual Implementation"),Object(i.b)("p",null,"Considering two users, ",Object(i.b)("em",{parentName:"p"},"User 1")," and ",Object(i.b)("em",{parentName:"p"},"User 2"),". Let's say ",Object(i.b)("em",{parentName:"p"},"User 1")," sends a mentorship request to ",Object(i.b)("em",{parentName:"p"},"User 2")," (next image illustrates this)."),Object(i.b)("p",{align:"center"},Object(i.b)("img",{alt:"User 1 sends a mentorship relation request to User 2",src:"https://user-images.githubusercontent.com/11148726/43965132-68650400-9cb6-11e8-8667-92a181823845.png"})),Object(i.b)("p",null,"Looking at the next image, you can consider these 3 stages:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"(1): Before a request is sent"),Object(i.b)("li",{parentName:"ul"},"(2): When the User receives a request"),Object(i.b)("li",{parentName:"ul"},"(3): After a relation starts")),Object(i.b)("hr",null),Object(i.b)("h3",{id:"relation-states-and-stages"},"Relation states and stages"),Object(i.b)("p",{align:"center"},Object(i.b)("img",{alt:"Stages and states of a Mentorship Relation",src:"https://user-images.githubusercontent.com/11148726/43964310-73dd99ac-9cb4-11e8-8353-96abadc53ce1.png"})),Object(i.b)("p",null,"The next table explains more of the image above."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"State"),Object(i.b)("th",{parentName:"tr",align:null},"Who can trigger this"),Object(i.b)("th",{parentName:"tr",align:null},"How is this triggered"),Object(i.b)("th",{parentName:"tr",align:null},"Constraints"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"PENDING"),Object(i.b)("td",{parentName:"tr",align:null},"Any User (E.g.: User 1 and User 2)"),Object(i.b)("td",{parentName:"tr",align:null},"A User sends/creates a mentorship relation request using the frontend application or backend API"),Object(i.b)("td",{parentName:"tr",align:null},"N/A")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"ACCEPTED"),Object(i.b)("td",{parentName:"tr",align:null},"The User that received the request (E.g.: User 2)"),Object(i.b)("td",{parentName:"tr",align:null},"The User that received the request can accept this using the frontend application or backend API"),Object(i.b)("td",{parentName:"tr",align:null},"Sets only if the relation is in the PENDING state")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"REJECTED"),Object(i.b)("td",{parentName:"tr",align:null},"The User that received the request (E.g.: User 2)"),Object(i.b)("td",{parentName:"tr",align:null},"The User that received the request can reject this using the frontend application or backend API"),Object(i.b)("td",{parentName:"tr",align:null},"Sets only if the relation is in the PENDING state")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"CANCELLED"),Object(i.b)("td",{parentName:"tr",align:null},"Both Users participation in a current relation (E.g.: User 1 and User 2)"),Object(i.b)("td",{parentName:"tr",align:null},"Any of the 2 Users participating in the relation can cancel the current relation both on the frontend application or backend API"),Object(i.b)("td",{parentName:"tr",align:null},"Sets only if the relation is in the ACCEPTED state")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"COMPLETED"),Object(i.b)("td",{parentName:"tr",align:null},"A cron job running every day 23h59 (automatically)"),Object(i.b)("td",{parentName:"tr",align:null},"A cron job in the backend iterates over every mentorship relation, in the ACCEPTED state, and sets this states for relations that passed the end date"),Object(i.b)("td",{parentName:"tr",align:null},"Sets only if the relation is in the ACCEPTED state")))),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Note:")," Even though is not represented in the previous image, the User that sent the mentorship request can delete the request if its state wasn't changed by the receiving User."))}p.isMDXComponent=!0}}]);